# Generated by Django 2.1.3 on 2018-12-11 14:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import kernel.utils.upload_to


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.KERNEL_FACULTYMEMBER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrativePosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_full_date', models.BooleanField(default=False)),
                ('position', models.CharField(max_length=127)),
                ('organisation', models.CharField(max_length=127)),
                ('description', models.TextField()),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('scope', models.CharField(choices=[('d', 'Departmental'), ('i', 'Central'), ('i', 'Institute'), ('e', 'External')], max_length=1)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_ADMINISTRATIVEPOSITION_MODEL',
            },
        ),
        migrations.CreateModel(
            name='AssociateScholar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('scholar_name', models.CharField(max_length=63)),
                ('institution', models.CharField(max_length=127)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_ASSOCIATESCHOLAR_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('authors', models.CharField(max_length=255)),
                ('publisher', models.CharField(max_length=127)),
                ('year', models.IntegerField()),
                ('pages', models.CharField(blank=True, max_length=31)),
                ('volumes', models.CharField(blank=True, max_length=31)),
                ('contribution', models.CharField(blank=True, max_length=255)),
                ('editors', models.CharField(blank=True, max_length=255)),
                ('isbn_code', models.CharField(blank=True, max_length=255, verbose_name='ISBN code')),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_BOOK_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('organisation', models.CharField(max_length=127)),
                ('topic', models.CharField(max_length=255)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_COLLABORATION_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField()),
                ('institute', models.CharField(max_length=127)),
                ('field_of_study', models.CharField(blank=True, help_text='This can be a stream like Science or Commerce for school education', max_length=127)),
                ('degree', models.CharField(help_text='This can be a class like Class X or Class XII for school education', max_length=127)),
                ('graduation', models.CharField(choices=[('mat', 'Matriculate'), ('int', 'Intermediate'), ('ass', 'Associate'), ('gra', 'Graduate'), ('pos', 'Postgraduate'), ('doc', 'Doctorate'), ('pdo', 'Postdoctorate')], max_length=3)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'education',
                'swappable': 'FACULTY_BIODATA_EDUCATION_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=127)),
                ('sponsor', models.CharField(blank=True, max_length=127)),
                ('place', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('con', 'Conference'), ('gue', 'Guest lecture'), ('sem', 'Seminar'), ('stc', 'Short term course'), ('spl', 'Special lecture'), ('tlk', 'Talk')], max_length=3)),
                ('role', models.CharField(choices=[('o', 'Organiser'), ('a', 'Attendee')], max_length=1)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_EVENT_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Honour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('organisation', models.CharField(max_length=127)),
                ('award', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_HONOUR_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('topic', models.CharField(max_length=255)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('faculty_member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_INTEREST_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_full_date', models.BooleanField(default=False)),
                ('position', models.CharField(max_length=127)),
                ('organisation', models.CharField(max_length=127)),
                ('description', models.TextField()),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_MEMBERSHIP_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('authors', models.CharField(max_length=255)),
                ('publisher', models.CharField(max_length=127)),
                ('year', models.IntegerField()),
                ('pages', models.CharField(blank=True, max_length=31)),
                ('volumes', models.CharField(blank=True, max_length=31)),
                ('journal', models.CharField(max_length=255)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=kernel.utils.upload_to.UploadTo('faculty_biodata', 'papers'))),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_PAPER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('handle', models.SlugField(blank=True, max_length=31)),
                ('description', models.TextField()),
                ('resume', models.FileField(upload_to=kernel.utils.upload_to.UploadTo('faculty_biodata', 'resume'))),
                ('faculty_member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_PROFILE_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_full_date', models.BooleanField(default=False)),
                ('topic', models.CharField(max_length=127)),
                ('field', models.CharField(max_length=127)),
                ('description', models.TextField(blank=True)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=kernel.utils.upload_to.UploadTo('faculty_biodata', 'projects'))),
                ('financial_outlay', models.CharField(max_length=127)),
                ('funding_agency', models.CharField(max_length=127)),
                ('other_investigating_officers', models.CharField(blank=True, max_length=127, null=True)),
                ('project_type', models.CharField(choices=[('s', 'Sponsored'), ('c', 'Consultancy')], max_length=3)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_PROJECT_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Supervision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_full_date', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('topic', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('pro', 'Project'), ('doc', 'Doctorate')], max_length=3)),
                ('name_of_other_supervisors', models.TextField()),
                ('scholars_name', models.TextField()),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_SUPERVISION_MODEL',
            },
        ),
        migrations.CreateModel(
            name='TeachingEngagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('class_name', models.CharField(blank=True, max_length=255, null=True)),
                ('student_count', models.IntegerField()),
                ('course', models.CharField(max_length=127)),
                ('lecture_hours', models.IntegerField()),
                ('practical_hours', models.IntegerField()),
                ('tutorial_hours', models.IntegerField()),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_TEACHINGENGAGEMENT_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('priority', models.IntegerField(default=0)),
                ('visibility', models.BooleanField(default=True)),
                ('purpose', models.CharField(max_length=255)),
                ('place', models.CharField(max_length=255)),
                ('date', models.DateField(blank=True, null=True)),
                ('faculty_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.KERNEL_FACULTYMEMBER_MODEL)),
            ],
            options={
                'swappable': 'FACULTY_BIODATA_VISIT_MODEL',
            },
        ),
    ]
